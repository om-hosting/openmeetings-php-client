<?php
/**
 * RoomServiceApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Apache OpenMeetings API
 *
 * Integration API enables to connect to an OpenMeetings instance, eg for generating users, create links to directly access conference rooms.<br/><br/>         <b>It is mainly designed for Server2Server integration, for example to integrate into your website, CMS or 3rd party application</b><br/><br/>         For examples how to use the Rest API see <a href=\"https://openmeetings.apache.org/RestAPISample.html\" target=\"_BLANK\">https://openmeetings.apache.org/RestAPISample.html</a>.<br/><br/>         Community contributed modules for using this API include for example:         <ul>          <li><a href=\"https://openmeetings.apache.org/RestAPISample.html#how-to-integrate-using-nodejs\" target=\"_BLANK\"> Node.js module for using API</a></li>         </ul>         Other community plugins using this API for Moodle, SugarCRM, Drupal, Joomla can be found in the Configuration>Plugins section at <a href=\"https://openmeetings.apache.org\" target=\"_BLANK\">https://openmeetings.apache.org</a>
 *
 * OpenAPI spec version: 7.0.0-SNAPSHOT
 * Contact: dev@openmeetings.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.27
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Swagger\Client;

use Swagger\Client\Configuration;
use Swagger\Client\ApiException;
use Swagger\Client\ObjectSerializer;

/**
 * RoomServiceApiTest Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class RoomServiceApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test case for add2
     *
     * .
     *
     */
    public function testAdd2()
    {
    }

    /**
     * Test case for cleanWb
     *
     * .
     *
     */
    public function testCleanWb()
    {
    }

    /**
     * Test case for close
     *
     * .
     *
     */
    public function testClose()
    {
    }

    /**
     * Test case for count
     *
     * .
     *
     */
    public function testCount()
    {
    }

    /**
     * Test case for delete4
     *
     * .
     *
     */
    public function testDelete4()
    {
    }

    /**
     * Test case for getExternal1
     *
     * .
     *
     */
    public function testGetExternal1()
    {
    }

    /**
     * Test case for getPublic
     *
     * .
     *
     */
    public function testGetPublic()
    {
    }

    /**
     * Test case for getRoomById
     *
     * .
     *
     */
    public function testGetRoomById()
    {
    }

    /**
     * Test case for hash
     *
     * .
     *
     */
    public function testHash()
    {
    }

    /**
     * Test case for kick
     *
     * .
     *
     */
    public function testKick()
    {
    }

    /**
     * Test case for kickAll
     *
     * .
     *
     */
    public function testKickAll()
    {
    }

    /**
     * Test case for open
     *
     * .
     *
     */
    public function testOpen()
    {
    }

    /**
     * Test case for users
     *
     * .
     *
     */
    public function testUsers()
    {
    }
}
